# 平均の列を自分で作ってしまう
SELECT
	*
FROM(
		SELECT
			*,
			AVG(score) OVER() AS avg_score
		FROM review
)t;

 user_id | product_id | score |     avg_score
---------+------------+-------+--------------------
 U001    | A001       |   4.0 | 4.1111111111111111
 U001    | A002       |   5.0 | 4.1111111111111111
 U001    | A003       |   5.0 | 4.1111111111111111
 U002    | A001       |   3.0 | 4.1111111111111111
 U002    | A002       |   3.0 | 4.1111111111111111
 U002    | A003       |   4.0 | 4.1111111111111111
 U003    | A001       |   5.0 | 4.1111111111111111
 U003    | A002       |   4.0 | 4.1111111111111111
 U003    | A003       |   4.0 | 4.1111111111111111
(9 行)

# もう少し丸めて、これを使う
SELECT
	*
FROM(
		SELECT
			*,
			ROUND(AVG(score) OVER(), 2) AS avg_score
		FROM review
)t;

 user_id | product_id | score | avg_score
---------+------------+-------+-----------
 U001    | A001       |   4.0 |      4.11
 U001    | A002       |   5.0 |      4.11
 U001    | A003       |   5.0 |      4.11
 U002    | A001       |   3.0 |      4.11
 U002    | A002       |   3.0 |      4.11
 U002    | A003       |   4.0 |      4.11
 U003    | A001       |   5.0 |      4.11
 U003    | A002       |   4.0 |      4.11
 U003    | A003       |   4.0 |      4.11
(9 行)

# こうすれば平均からの距離が計算できた
SELECT
	*,
	score - avg_score AS avg_diff
FROM(
		SELECT
			*,
			ROUND(AVG(score) OVER(), 2) AS avg_score
		FROM review
)t;

 user_id | product_id | score | avg_score | avg_diff
---------+------------+-------+-----------+----------
 U001    | A001       |   4.0 |      4.11 |    -0.11
 U001    | A002       |   5.0 |      4.11 |     0.89
 U001    | A003       |   5.0 |      4.11 |     0.89
 U002    | A001       |   3.0 |      4.11 |    -1.11
 U002    | A002       |   3.0 |      4.11 |    -1.11
 U002    | A003       |   4.0 |      4.11 |    -0.11
 U003    | A001       |   5.0 |      4.11 |     0.89
 U003    | A002       |   4.0 |      4.11 |    -0.11
 U003    | A003       |   4.0 |      4.11 |    -0.11
(9 行)

shop2=# SELECT * FROM popular_products;
 product_id | category | score
------------+----------+-------
 A001       | action   |    94
 A002       | action   |    81
 A003       | action   |    78
 A004       | action   |    64
 D001       | drama    |    90
 D002       | drama    |    82
 D003       | drama    |    78
 D004       | drama    |    58
(8 行)

# 商品ごとに、1番点数が高いモノを出す
SELECT
	*
FROM(
	SELECT
		*,
		MAX(score) OVER(
			PARTITION BY category
		) AS max_score
	FROM popular_products
)t
WHERE score = max_score;

 product_id | category | score | max_score
------------+----------+-------+-----------
 A001       | action   |    94 |        94
 D001       | drama    |    90 |        90
(2 行)
